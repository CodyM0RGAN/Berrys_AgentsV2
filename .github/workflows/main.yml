name: Main CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'shared/**'
      - '.github/workflows/templates/**'
      - '.github/scripts/ci/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'shared/**'
      - '.github/workflows/templates/**'
      - '.github/scripts/ci/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: false
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod

jobs:
  trigger-services:
    name: Trigger Service Workflows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Trigger Tool Integration Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'tool-integration.yml',
              ref: 'main',
              inputs: {
                environment: '${{ github.event.inputs.environment }}'
              }
            })
      
      - name: Trigger Agent Orchestrator Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'agent-orchestrator.yml',
              ref: 'main',
              inputs: {
                environment: '${{ github.event.inputs.environment }}'
              }
            })
      
      - name: Trigger Model Orchestration Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'model-orchestration.yml',
              ref: 'main',
              inputs: {
                environment: '${{ github.event.inputs.environment }}'
              }
            })
  
  collect-reports:
    name: Collect Reports
    needs: trigger-services
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install matplotlib pandas
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      
      - name: Generate consolidated test report
        run: |
          python .github/scripts/ci/test-collector.py \
            --artifacts-dir=artifacts \
            --output-file=consolidated-test-report.html \
            --format=html
      
      - name: Generate consolidated coverage report
        run: |
          python .github/scripts/ci/coverage-reporter.py \
            --artifacts-dir=artifacts \
            --output-file=consolidated-coverage-report.html \
            --format=html \
            --threshold=80
      
      - name: Generate consolidated quality report
        run: |
          python .github/scripts/ci/quality-checker.py \
            --artifacts-dir=artifacts \
            --output-file=consolidated-quality-report.html \
            --format=html
      
      - name: Upload consolidated reports
        uses: actions/upload-artifact@v3
        with:
          name: consolidated-reports
          path: |
            consolidated-test-report.html
            consolidated-coverage-report.html
            consolidated-quality-report.html
            *_chart.png
