name: Tool Integration Service CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'services/tool-integration/**'
      - 'shared/**'
      - '.github/workflows/tool-integration.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'services/tool-integration/**'
      - 'shared/**'
      - '.github/workflows/tool-integration.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - prod

env:
  SERVICE_NAME: tool-integration
  WORKING_DIRECTORY: services/tool-integration
  PYTHON_VERSION: '3.10'
  DOCKER_IMAGE: berrys/tool-integration
  COVERAGE_THRESHOLD: 80

jobs:
  build:
    name: Build
    uses: ./.github/workflows/templates/build.yml
    with:
      service_name: ${{ env.SERVICE_NAME }}
      python_version: ${{ env.PYTHON_VERSION }}
      working_directory: ${{ env.WORKING_DIRECTORY }}
  
  test:
    name: Test
    needs: build
    uses: ./.github/workflows/templates/test.yml
    with:
      service_name: ${{ env.SERVICE_NAME }}
      python_version: ${{ env.PYTHON_VERSION }}
      working_directory: ${{ env.WORKING_DIRECTORY }}
      coverage_threshold: ${{ env.COVERAGE_THRESHOLD }}
      test_parallelism: 4
  
  quality:
    name: Quality
    needs: build
    uses: ./.github/workflows/templates/quality.yml
    with:
      service_name: ${{ env.SERVICE_NAME }}
      python_version: ${{ env.PYTHON_VERSION }}
      working_directory: ${{ env.WORKING_DIRECTORY }}
      lint_fail_on_error: false
      security_fail_on_error: true
  
  deploy-dev:
    name: Deploy to Dev
    needs: [test, quality]
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')
    uses: ./.github/workflows/templates/deploy.yml
    with:
      service_name: ${{ env.SERVICE_NAME }}
      environment: dev
      working_directory: ${{ env.WORKING_DIRECTORY }}
      docker_image: ${{ env.DOCKER_IMAGE }}
      docker_tag: ${{ github.sha }}
      run_migrations: true
    secrets:
      KUBECONFIG_DATA: ${{ secrets.DEV_KUBECONFIG_DATA }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      API_TOKEN: ${{ secrets.DEV_API_TOKEN }}
  
  deploy-qa:
    name: Deploy to QA
    needs: [deploy-dev]
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'qa')
    uses: ./.github/workflows/templates/deploy.yml
    with:
      service_name: ${{ env.SERVICE_NAME }}
      environment: qa
      working_directory: ${{ env.WORKING_DIRECTORY }}
      docker_image: ${{ env.DOCKER_IMAGE }}
      docker_tag: ${{ github.sha }}
      run_migrations: true
    secrets:
      KUBECONFIG_DATA: ${{ secrets.QA_KUBECONFIG_DATA }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      API_TOKEN: ${{ secrets.QA_API_TOKEN }}
  
  deploy-prod:
    name: Deploy to Production
    needs: [deploy-qa]
    if: |
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod')
    uses: ./.github/workflows/templates/deploy.yml
    with:
      service_name: ${{ env.SERVICE_NAME }}
      environment: prod
      working_directory: ${{ env.WORKING_DIRECTORY }}
      docker_image: ${{ env.DOCKER_IMAGE }}
      docker_tag: ${{ github.sha }}
      run_migrations: true
    secrets:
      KUBECONFIG_DATA: ${{ secrets.PROD_KUBECONFIG_DATA }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      API_TOKEN: ${{ secrets.PROD_API_TOKEN }}
